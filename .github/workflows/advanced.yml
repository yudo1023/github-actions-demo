name: Advanced Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # 매주 월요일 오전 2시

env:
  NODE_VERSION: '20.x'

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check code formatting
      run: |
        # Prettier 설치 및 실행 (실제 프로젝트에서는 package.json에 추가)
        npx prettier --check "src/**/*.js" "tests/**/*.js" || echo "Formatting check completed"

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level high
      
    - name: Check for vulnerable dependencies
      run: |
        npm audit --json > audit-results.json || true
        echo "Security audit completed"

  test-coverage:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests with coverage
      run: npm test -- --coverage || npm test
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/

  deploy-staging:
    needs: [lint-and-format, security-scan, test-coverage]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: staging
      url: https://staging.example.com
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: |
        echo "Building application for staging..."
        mkdir -p dist
        cp -r src/ dist/
        cp package.json dist/
        
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "Deployment completed at $(date)"

  deploy-production:
    needs: [lint-and-format, security-scan, test-coverage]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    environment:
      name: production
      url: https://production.example.com
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: |
        echo "Building application for production..."
        mkdir -p dist
        cp -r src/ dist/
        cp package.json dist/
        
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        echo "Version: ${{ github.ref_name }}"
        echo "Deployment completed at $(date)"
